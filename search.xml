<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo+github搭建个人博客</title>
    <url>/2020/07/21/hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h6 id="选择合适的部署平台"><a href="#选择合适的部署平台" class="headerlink" title="选择合适的部署平台"></a>选择合适的部署平台</h6><p>这里选用 Gitee 或者 Github 都可以部署，两者有以下细微差别：</p>
<ul>
<li>Gitee ： 国内站点，网络稳定高速，github访问有时不稳定。</li>
<li>Github：站点项目更新部署到github/gitee后，github会自动重新部署更新，失败后还会给你发邮件，gitee则需要到Gitee Pages 服务里手动更新(非会员用户)</li>
</ul>
<h6 id="事先准备环境"><a href="#事先准备环境" class="headerlink" title="事先准备环境"></a><strong>事先准备环境</strong></h6><ul>
<li>安装 Node.js </li>
<li>安装 Git</li>
<li>要有Github账号</li>
</ul>
<h6 id="Hexo的安装和搭建"><a href="#Hexo的安装和搭建" class="headerlink" title="Hexo的安装和搭建"></a><strong>Hexo的安装和搭建</strong></h6><p>首先在电脑上新建一个文件夹，作为博客的存放地址，我这里选择  <code>E:\Blog</code> ，然后右键选择 <code>Git Bash Here</code> 。</p>
<p>执行以下命令，安装Hexo。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>再执行以下命令，初始化Hexo以及安装好所需的依赖包。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p>修改根目录下的_config.yml对博客进行基础配置。 <code>注意: 冒号后面都要有一个空格，这是yml文件的格式</code> </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">title: # 标题</span><br><span class="line">subtitle: # 副标题</span><br><span class="line">description: # 站点描述</span><br><span class="line">author: # 作者</span><br><span class="line">language: zh-Hans</span><br><span class="line">timezone:</span><br></pre></td></tr></table></figure>

<p>执行以下命令生成静态文件并开启服务器。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">hexo generate </span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<p>至此，就可以在本地浏览器输入<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>查看博客了。此时的博客只能在本地预览，也就是说别人是访问不到你的博客的，接下来我们要将博客部署到Gitee/Github 上。下面以Github为例。</p>
<h6 id="将博客部署到Github上"><a href="#将博客部署到Github上" class="headerlink" title="将博客部署到Github上"></a><strong>将博客部署到Github上</strong></h6><p>首先新建仓库。</p>
<p>点击<code>New Repository</code>。名称格式 <code>username.github.io</code>，这里的username要和github用户名保持一致。例如我的用户名是<code>lzqwwww</code>，那么我的名称就应该为 <code>lzqwwww.github.io</code>。</p>
<p>然后生成SSH密钥。</p>
<p>执行以下命令，一路回车。然后在<code>C:\Users\.ssh</code>下找到<code>id_rsa.pub</code>,打开并复制所有的内容。进入 <a href="https://github.com/settings/keys">SSH KEY</a> ，点击<code>New SSH Key</code> 将复制的内容粘贴在Key里，Title可任意起名。然后<code>Add SSH Key</code>。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"Github的邮箱地址"</span></span><br></pre></td></tr></table></figure>

<p>最后进行部署工作。</p>
<p>在根目录下的_config.yml 中找到 deploy ，按下面的格式填写。<code>repo</code>是仓库地址。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:<span class="comment">//github.com/username/username.github.io.git</span></span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>安装hexo-deployer-git部署发布工具:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>执行以下命令发布博客，第一次要求输入github账户和密码。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">hexo c &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>

<p>至此部署结束，浏览器输入<code>https://username.github.io/</code>就能查看你的博客了。例如我的博客地址  <a href="https://lzqwwww.github.io/" target="_blank" rel="noopener">https://lzqwwww.github.io/</a>。</p>
<h6 id="常用的Hexo命令"><a href="#常用的Hexo命令" class="headerlink" title="常用的Hexo命令"></a><strong>常用的Hexo命令</strong></h6><figure class="highlight"><table><tr><td class="code"><pre><span class="line">hexo init # 初始化目录</span><br><span class="line">hexo new "postName" 或 hexo n "postName" # 新建文章</span><br><span class="line">hexo new draft "draftName" #新建草稿</span><br><span class="line">hexo new page "pageName" 或 hexo n "pageName" # 新建页面</span><br><span class="line">hexo publish "draftName" # 将草稿发布成为文章</span><br><span class="line">hexo clean 或 hexo c # 清除缓存</span><br><span class="line">hexo generate 或 hexo g # 生成网页在 public 目录有整个网站的文件</span><br><span class="line">hexo deploy 或 hexo d # 部署.deploy目录</span><br><span class="line">hexo server 或 hexo s # 启动本地服务器</span><br></pre></td></tr></table></figure>









]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>解决hexo图片不显示问题</title>
    <url>/2020/07/22/%E8%A7%A3%E5%86%B3hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>解决方案如下：</p>
<ol>
<li><p>在根目录下配置文件<code>_config.yml</code> 中将 <code>post_asset_folder:false改为true</code>。这样在建立博客时，<code>Hexo</code>会自动建立一个与其同名的文件夹，用于存放与该文章相关的所有资源。这里我放一张图片<code>test.jpg</code>。</p>
</li>
<li><p>安装hexo-asset-image插件。使用这个插件来引入图片，而不是网上那些方法里说的用传统md语法相对路径的方法。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">npm install https:<span class="comment">//github.com/7ym0n/hexo-asset-image --save</span></span><br></pre></td></tr></table></figure>

<p>注意：这是个修改过的插件，经测试无问题，之前用的别的几个插件都多多少少有些问题。</p>
</li>
<li><p>用这种方式：<code></code>  插入图片</p>
</li>
</ol>
<p>　 其中<code>test.jpg</code>就是要引用的图片，后面的<code>This is an test image</code>是图片描述，可自行修改。</p>
<ol start="4">
<li><p>执行下面命令，查看是否成功显示。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">hexo c &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>



</li>
</ol>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
